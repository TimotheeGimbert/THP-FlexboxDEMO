body {
    display: flex; /* <body> is defined as a FLEX-CONTAINER*/
    flex-direction: column; /* The direct children of body will be positionned verticaly as blocks */ 
    justify-content: space-between; /* Along the main axis, which is vertical, the flex-items are separated with space between them */
    min-height: 100vh; /* That forces the body to occupy the whole height of the user's screen (100vh = 100% of 'vertical height' */
    margin: 0; 
    padding: 0; 
}

header {
    display: flex; /* <header> is defined as a FLEX-CONTAINER.   <header> is already a flex-item of body, but will also be a flex-container for its own direct children */
    flex-direction: row; /* flex-items of <header> will be displayed horizontaly one after another */
    justify-content: flex-end; /* Along the PRIMARY AXIS, which is here horizontal, flex-items of <header> will be positionned at the end of <header> */
}

main {
    display: flex; /* <main> is defined as a FLEX-CONTAINER*/
    flex-direction: column; /* The direct children of <main> will be positionned verticaly as blocks */ 
    align-items: center; /* Along the SECONDARY AXIS, which is horizontal, the flex-items are centered */
    justify-content: flex-start; /* For example here we are also aligning them at the start on the PRIMARY AXIS, which is here the vertical axis*/
}

footer {
    display: flex;
    flex-direction: column;
}







/* The code below is only here for styling, and doesn't impact elements global positionning 
This code has been separated from the above for readability purposes only */
body {background-color: rgba(114, 231, 192, 0.63);}
body > * {border: 2px solid orange;}
header > div, main > section, footer > div { border: 1px solid red; margin: 10px; }
